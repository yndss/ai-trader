#!/usr/bin/env python3
"""
–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π CLI —á–∞—Ç —Å AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º —Ç—Ä–µ–π–¥–µ—Ä–∞

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    poetry run chat-cli
    python -m src.app.chat_cli
"""

import sys

import click

from finam_client import FinamAPIClient
from src.app.core import call_llm, get_settings


def create_system_prompt() -> str:
    """–°–æ–∑–¥–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"""
    return """–¢—ã - AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Ç—Ä–µ–π–¥–µ—Ä–∞, —Ä–∞–±–æ—Ç–∞—é—â–∏–π —Å Finam TradeAPI.

–¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø–æ–º–æ–≥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—ã–Ω–∫–∏ –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª–µ–º.

–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å, —Ç—ã –¥–æ–ª–∂–µ–Ω:
1. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–æ–π API –∑–∞–ø—Ä–æ—Å –Ω—É–∂–µ–Ω
2. –°—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: HTTP_METHOD /api/path
3. –Ø –≤—ã–ø–æ–ª–Ω—é —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –∏ –≤–µ—Ä–Ω—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç
4. –¢—ã –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –¥–∞—Ç—å –ø–æ–Ω—è—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

–î–æ—Å—Ç—É–ø–Ω—ã–µ API endpoints:
- GET /v1/instruments/{symbol}/quotes/latest - —Ç–µ–∫—É—â–∞—è –∫–æ—Ç–∏—Ä–æ–≤–∫–∞
- GET /v1/instruments/{symbol}/orderbook - –±–∏—Ä–∂–µ–≤–æ–π —Å—Ç–∞–∫–∞–Ω
- GET /v1/instruments/{symbol}/bars - –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Å–≤–µ—á–∏
- GET /v1/accounts/{account_id} - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—á–µ—Ç–µ –∏ –ø–æ–∑–∏—Ü–∏—è—Ö
- GET /v1/accounts/{account_id}/orders - —Å–ø–∏—Å–æ–∫ –æ—Ä–¥–µ—Ä–æ–≤
- POST /v1/accounts/{account_id}/orders - —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ä–¥–µ—Ä–∞
- DELETE /v1/accounts/{account_id}/orders/{order_id} - –æ—Ç–º–µ–Ω–∞ –æ—Ä–¥–µ—Ä–∞

–§–æ—Ä–º–∞—Ç —Ç–≤–æ–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–∞–∫–∏–º:
```
API_REQUEST: GET /v1/instruments/SBER@MISX/quotes/latest

<–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç API, –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –µ–≥–æ –∏ –¥–∞–π –ø–æ–Ω—è—Ç–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ>
```

–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –±—É–¥—å –ø–æ–ª–µ–∑–Ω—ã–º –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º."""


def extract_api_request(text: str) -> tuple[str | None, str | None]:
    """–ò–∑–≤–ª–µ—á—å API –∑–∞–ø—Ä–æ—Å –∏–∑ –æ—Ç–≤–µ—Ç–∞ LLM"""
    if "API_REQUEST:" not in text:
        return None, None

    lines = text.split("\n")
    for line in lines:
        if line.strip().startswith("API_REQUEST:"):
            request = line.replace("API_REQUEST:", "").strip()
            parts = request.split(maxsplit=1)
            if len(parts) == 2:
                return parts[0], parts[1]
    return None, None


@click.command()
@click.option("--account-id", default=None, help="ID —Å—á–µ—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
@click.option("--api-token", default=None, help="Finam API —Ç–æ–∫–µ–Ω (–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ FINAM_ACCESS_TOKEN)")
def main(account_id: str | None, api_token: str | None) -> None:  # noqa: C901
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π CLI —á–∞—Ç —Å AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º"""
    settings = get_settings()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç Finam API
    finam_client = FinamAPIClient(access_token=api_token)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if finam_client.access_token:
        click.echo("‚úÖ Finam API —Ç–æ–∫–µ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        click.echo("‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: Finam API —Ç–æ–∫–µ–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        click.echo("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è FINAM_ACCESS_TOKEN")
        click.echo("   –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ --api-token")

    click.echo("=" * 70)
    click.echo("ü§ñ AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –¢—Ä–µ–π–¥–µ—Ä–∞ (Finam TradeAPI)")
    click.echo("=" * 70)
    click.echo(f"–ú–æ–¥–µ–ª—å: {settings.openrouter_model}")
    click.echo(f"API URL: {finam_client.base_url}")
    if account_id:
        click.echo(f"–°—á–µ—Ç: {account_id}")
    click.echo("\n–ö–æ–º–∞–Ω–¥—ã:")
    click.echo("  - –ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º")
    click.echo("  - 'exit' –∏–ª–∏ 'quit' - –≤—ã—Ö–æ–¥")
    click.echo("  - 'clear' - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é")
    click.echo("=" * 70)

    conversation_history = [{"role": "system", "content": create_system_prompt()}]

    while True:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_input = click.prompt("\nüë§ –í—ã", type=str, prompt_suffix=": ")

            if user_input.lower() in ["exit", "quit", "–≤—ã—Ö–æ–¥"]:
                click.echo("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break

            if user_input.lower() in ["clear", "–æ—á–∏—Å—Ç–∏—Ç—å"]:
                conversation_history = [{"role": "system", "content": create_system_prompt()}]
                click.echo("üîÑ –ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞")
                continue

            # –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ –∏—Å—Ç–æ—Ä–∏—é
            conversation_history.append({"role": "user", "content": user_input})

            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç LLM
            click.echo("ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç: ", nl=False)
            response = call_llm(conversation_history, temperature=0.3)
            assistant_message = response["choices"][0]["message"]["content"]

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ API –∑–∞–ø—Ä–æ—Å
            method, path = extract_api_request(assistant_message)

            if method and path:
                # –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º account_id –µ—Å–ª–∏ –µ—Å—Ç—å
                if account_id and "{account_id}" in path:  # noqa: RUF027
                    path = path.replace("{account_id}", account_id)

                # –í—ã–ø–æ–ª–Ω—è–µ–º API –∑–∞–ø—Ä–æ—Å
                click.echo(f"\n   üîç –í—ã–ø–æ–ª–Ω—è—é –∑–∞–ø—Ä–æ—Å: {method} {path}")
                api_response = finam_client.execute_request(method, path)

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏
                if "error" in api_response:
                    click.echo(f"   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ API: {api_response.get('error')}", err=True)
                    if "details" in api_response:
                        click.echo(f"   –î–µ—Ç–∞–ª–∏: {api_response['details']}", err=True)
                else:
                    click.echo(f"   üì° –û—Ç–≤–µ—Ç API: {api_response}\n")

                # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç API –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
                conversation_history.append({"role": "assistant", "content": assistant_message})
                conversation_history.append({
                    "role": "user",
                    "content": f"–†–µ–∑—É–ª—å—Ç–∞—Ç API –∑–∞–ø—Ä–æ—Å–∞: {api_response}\n\n–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ.",
                })

                # –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
                response = call_llm(conversation_history, temperature=0.3)
                assistant_message = response["choices"][0]["message"]["content"]

            click.echo(f"{assistant_message}\n")
            conversation_history.append({"role": "assistant", "content": assistant_message})

        except KeyboardInterrupt:
            click.echo("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            sys.exit(0)
        except Exception as e:
            click.echo(f"\n‚ùå –û—à–∏–±–∫–∞: {e}", err=True)


if __name__ == "__main__":
    main()
